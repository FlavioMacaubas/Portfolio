"BCB.13522 - Value",
"BCB.1211 - Value"))
View(dados_melted)
dados_melted %>%
ggplot() +
geom_line(aes(x = Date, y = VALOR, color = SERIE))
dados_melted %>%
ggplot() +
geom_line(aes(x = Date, y = VALOR, color = SERIE)) +
facet_wrap(~SERIE, nrow = 2, ncol = 3)
dados_melted %>%
ggplot() +
geom_line(aes(x = Date, y = VALOR, color = SERIE)) +
facet_wrap(~SERIE, nrow = 3, ncol = 2)
dados %>%
ggplot() +
geom_line(aes(x = Date, y = "BCB.1253 - Value"))
dados %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1253 - Value´))
dados %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1253 - Value´))
dados %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1253 - Value`))
dados %>% select(Date, `BCB.1253 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1253 - Value`))
graf_1 = dados %>% select(Date, `BCB.1253 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1253 - Value`))
graf_2 = dados %>% select(Date, `BCB.7325 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.7325 - Value`))
graf_3 = dados %>% select(Date, `BCB.24369 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.24369 - Value`))
graf_4 = dados %>% select(Date, `BCB.13522 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.13522 - Value`))
graf_5 = dados %>% select(Date, `BCB.1211 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1211 - Value`))
require(gridExtra)
grid.arrange(graf_1, graf_2, graf_3, graf_4, graf_5, ncol = 2)
graf_1 = dados %>% select(Date, `BCB.1253 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1253 - Value`), color = 'Blue')
graf_2 = dados %>% select(Date, `BCB.7325 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.7325 - Value`), color = 'Red')
graf_3 = dados %>% select(Date, `BCB.24369 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.24369 - Value`), color = 'Orange')
graf_4 = dados %>% select(Date, `BCB.13522 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.13522 - Value`), color = 'Purple')
graf_5 = dados %>% select(Date, `BCB.1211 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1211 - Value`), color = 'Cyan')
grid.arrange(graf_1, graf_2, graf_3, graf_4, graf_5, ncol = 2)
grid.arrange(graf_1, graf_2, graf_3, graf_4, graf_5,
ncol = 2,
title = 'Oi')
grid.arrange(graf_1, graf_2, graf_3, graf_4, graf_5,
ncol = 2,
main = 'Oi')
grid.arrange(graf_1, graf_2, graf_3, graf_4, graf_5,
ncol = 2)
graf_1 = dados %>% select(Date, `BCB.1253 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1253 - Value`), color = 'Blue') +
theme_minimal()
graf_2 = dados %>% select(Date, `BCB.7325 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.7325 - Value`), color = 'Red') +
theme_minimal()
graf_3 = dados %>% select(Date, `BCB.24369 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.24369 - Value`), color = 'Orange') +
theme_minimal()
graf_4 = dados %>% select(Date, `BCB.13522 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.13522 - Value`), color = 'Purple') +
theme_minimal()
graf_5 = dados %>% select(Date, `BCB.1211 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1211 - Value`), color = 'Cyan') +
theme_minimal()
grid.arrange(graf_1, graf_2, graf_3, graf_4, graf_5,
ncol = 2)
graf_1 = dados %>% select(Date, `BCB.1253 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1253 - Value`), color = 'Blue') +
labs(title = 'PIB dessazonalizado (1995 = 100) - TRIMESTRAL') +
theme_minimal()
View(graf_1)
GRAF_1
graf_1
graf_1 = dados %>% select(Date, `BCB.1253 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1253 - Value`), color = 'Blue') +
labs(title = 'PIB dessazonalizado (1995 = 100) - TRIMESTRAL') +
theme_minimal()
graf_2 = dados %>% select(Date, `BCB.7325 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.7325 - Value`), color = 'Red') +
labs(title = 'PIB per/capita anual em dólar (preço corrente) - ANUAL') +
theme_minimal()
graf_3 = dados %>% select(Date, `BCB.24369 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.24369 - Value`), color = 'Orange') +
labs(title = 'Desemprego PNDA contínua - MENSAL') +
theme_minimal()
graf_4 = dados %>% select(Date, `BCB.13522 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.13522 - Value`), color = 'Purple') +
labs(title = 'IPCA acumulado 12 meses - MENSAL') +
theme_minimal()
graf_5 = dados %>% select(Date, `BCB.1211 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1211 - Value`), color = 'Cyan') +
labs(title = 'Deflator implícito do PIB - ANUAL') +
theme_minimal()
grid.arrange(graf_1, graf_2, graf_3, graf_4, graf_5,
ncol = 2)
graf_1 = dados %>% select(Date, `BCB.1253 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1253 - Value`), color = 'Blue') +
labs(title = 'PIB dessazonalizado (1995 = 100) - TRIMESTRAL', xlab = '') +
theme_minimal()
graf_1
graf_1 = dados %>% select(Date, `BCB.1253 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1253 - Value`), color = 'Blue') +
labs(title = 'PIB dessazonalizado (1995 = 100) - TRIMESTRAL', y = '') +
theme_minimal()
graf_1
graf_1 = dados %>% select(Date, `BCB.1253 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1253 - Value`), color = 'Blue') +
labs(title = 'PIB dessazonalizado (1995 = 100) - TRIMESTRAL', y = '', x = '') +
theme_minimal()
graf_2 = dados %>% select(Date, `BCB.7325 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.7325 - Value`), color = 'Red') +
labs(title = 'PIB per/capita anual em dólar (preço corrente) - ANUAL', y = '', x = '') +
theme_minimal()
graf_3 = dados %>% select(Date, `BCB.24369 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.24369 - Value`), color = 'Orange', y = '', x = '') +
labs(title = 'Desemprego PNDA contínua - MENSAL') +
theme_minimal()
graf_4 = dados %>% select(Date, `BCB.13522 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.13522 - Value`), color = 'Purple') +
labs(title = 'IPCA acumulado 12 meses - MENSAL', y = '', x = '') +
theme_minimal()
graf_5 = dados %>% select(Date, `BCB.1211 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1211 - Value`), color = 'Cyan') +
labs(title = 'Deflator implícito do PIB - ANUAL', y = '', x = '') +
theme_minimal()
grid.arrange(graf_1, graf_2, graf_3, graf_4, graf_5,
ncol = 2)
graf_1 = dados %>% select(Date, `BCB.1253 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1253 - Value`), color = 'Blue') +
labs(title = 'PIB dessazonalizado (1995 = 100) - TRIMESTRAL', y = '', x = '') +
theme_minimal()
graf_2 = dados %>% select(Date, `BCB.7325 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.7325 - Value`), color = 'Red') +
labs(title = 'PIB per/capita anual em dólar (preço corrente) - ANUAL', y = '', x = '') +
theme_minimal()
graf_3 = dados %>% select(Date, `BCB.24369 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.24369 - Value`), color = 'Orange') +
labs(title = 'Desemprego PNDA contínua - MENSAL', y = '', x = '') +
theme_minimal()
graf_4 = dados %>% select(Date, `BCB.13522 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.13522 - Value`), color = 'Purple') +
labs(title = 'IPCA acumulado 12 meses - MENSAL', y = '', x = '') +
theme_minimal()
graf_5 = dados %>% select(Date, `BCB.1211 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1211 - Value`), color = 'Cyan') +
labs(title = 'Deflator implícito do PIB - ANUAL', y = '', x = '') +
theme_minimal()
grid.arrange(graf_1, graf_2, graf_3, graf_4, graf_5,
ncol = 2)
grid.arrange(graf_1, graf_2, graf_3, graf_4, graf_5,
ncol = 3)
grid.arrange(graf_1, graf_2, graf_3, graf_4, graf_5,
ncol = 2)
graf_5 = dados %>% select(Date, `BCB.1211 - Value`) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.1211 - Value`), color = 'deepskyblue4') +
labs(title = 'Deflator implícito do PIB - ANUAL', y = '', x = '') +
theme_minimal()
grid.arrange(graf_1, graf_2, graf_3, graf_4, graf_5,
ncol = 2)
graf_6 = dados %>% select(Date, `BCB.24369 - Value`) %>% filter(Date %in% c('2013','2019')) %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.24369 - Value`), color = 'Orange') +
labs(title = 'Desemprego PNDA contínua - MENSAL', y = '', x = '') +
theme_minimal()
graf_6
dados %>% select(Date, `BCB.24369 - Value`) %>% filter(Date %in% c('2013','2019'))
# Restringindo 2013 a 2019
str(dados)
dados %>% select(Date, `BCB.24369 - Value`) %>% filter(Date > 2013)
dados %>% select(Date, `BCB.24369 - Value`) %>% filter(Date > year(2013))
require(lubridate)
dados %>% select(Date, `BCB.24369 - Value`) %>% filter(Date > year(2013))
dados %>% select(Date, `BCB.24369 - Value`) %>% filter(Date > '2013-01-01')
dados %>% select(Date, `BCB.24369 - Value`) %>% filter(Date %in% c('2013-01-01','2020-01-01'))
dados %>% select(Date, `BCB.24369 - Value`) %>%
filter(Date >= '2013-01-01' & Date < '2020-01-01')
graf_6 = dados %>% select(Date, `BCB.24369 - Value`) %>%
filter(Date >= '2013-01-01' & Date < '2020-01-01') %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.24369 - Value`), color = 'Orange') +
labs(title = 'Desemprego PNDA contínua - MENSAL', y = '', x = '') +
theme_minimal()
graf_7 = dados %>% select(Date, `BCB.13522 - Value`) %>%
filter(Date >= '2013-01-01' & Date < '2020-01-01') %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.13522 - Value`), color = 'Purple') +
labs(title = 'IPCA acumulado 12 meses - MENSAL', y = '', x = '') +
theme_minimal()
grid.arrange(graf_6, graf_7,
ncol = 2)
graf_6 = dados %>% select(Date, `BCB.24369 - Value`) %>%
filter(Date >= '2013-01-01' & Date < '2020-01-01') %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.24369 - Value`), color = 'Orange') +
labs(title = 'Desemprego PNDA contínua - MENSAL', y = '', x = '') +
theme_minimal()
graf_7 = dados %>% select(Date, `BCB.13522 - Value`) %>%
filter(Date >= '2013-01-01' & Date < '2020-01-01') %>%
drop_na() %>%
ggplot() +
geom_line(aes(x = Date, y = `BCB.13522 - Value`), color = 'Purple') +
labs(title = 'IPCA acumulado 12 meses - MENSAL', y = '', x = '') +
theme_minimal()
grid.arrange(graf_6, graf_7,
ncol = 2)
dados %>% select(Date, `BCB.13522 - Value`) %>%
filter(Date >= '2013-01-01' & Date < '2020-01-01')
dados %>% select(Date, `BCB.13522 - Value`) %>%
filter(Date >= '2013-01-01' & Date < '2020-01-01') %>%
drop_na() %>%
ggplot() +
geom_point(aes(x = `BCB.24369 - Value`, y = `BCB.13522 - Value`)) +
labs(title = 'Dipersão do desemprego em relação a inflação', y = '', x = '') +
theme_minimal()
dados %>%
filter(Date >= '2013-01-01' & Date < '2020-01-01') %>%
ggplot() +
geom_point(aes(x = `BCB.24369 - Value`, y = `BCB.13522 - Value`)) +
labs(title = 'Dipersão do desemprego em relação a inflação', y = '', x = '') +
theme_minimal()
dados %>%
filter(Date >= '2013-01-01' & Date < '2020-01-01') %>%
ggplot() +
geom_point(aes(x = `BCB.13522 - Value`, y = `BCB.24369 - Value`)) +
labs(title = 'Dipersão do desemprego em relação a inflação', y = '', x = '') +
theme_minimal()
dados %>%
filter(Date >= '2013-01-01' & Date < '2020-01-01') %>%
ggplot() +
geom_point(aes(x = `BCB.13522 - Value`, y = `BCB.24369 - Value`)) +
labs(title = 'Dipersão do desemprego em relação a inflação', y = 'IPCA', x = 'Desemprego') +
theme_minimal()
dados %>%
filter(Date >= '2013-01-01' & Date < '2020-01-01') %>%
ggplot() +
geom_point(aes(x = `BCB.13522 - Value`, y = `BCB.24369 - Value`), color = 'brown3') +
labs(title = 'Dipersão do desemprego em relação a inflação', y = 'IPCA', x = 'Desemprego') +
theme_minimal()
# Manipulação dos dados
library(readxl)
library(tidyverse)
# Manipulação de dados e gráficos espaciais com os dados do IBGE
library(sidrar)
library(geobr)
library(crul)
library(sf)
library(ggspatial)
# Mapa com marcadores
library(leaflet)
library(stringi) # Manipulação de Strings
# Ambiente de trabalho
setwd("C:/Users/Macaubas/Desktop/Python/Labimec/Artesanato/Dados/Limpos")
#### Importando os dados ----
##### a) Demanda Local ----
demanda_local = read_csv("DEMANDA_LOCAL_LIMPO.csv") %>%
rename(bairro = `2__BAIRRO_ONDE_MORA`) # Reonmeando nome dos bairros
##### b) Demanda Turista ----
demanda_turista = read_csv("DEMANDA_TURISTA_LIMPO.csv") %>%
select(ESTADO_ORIGEM)
##### c) Oferta Local ----
oferta_local =  read_csv("oferta_artesanal_pb_2022_limpo.csv") %>%
select(ESTADO_ONDE_NASCEU, ESTADO_ONDE_MOROU)
# Bairros de João Pessoa
geometria_bairros = geobr::read_neighborhood(year = 2010) %>%
filter(code_muni == 2507507) %>%  # Código do IBGE de João Pessoa
rename(bairro = name_neighborhood) %>%  # Renomeando nome dos bairros para português
select(bairro, geom) # Colunas de interesse para análise
# Estados
geometria_estados = geobr::read_state(year = 2010) %>%
select(abbrev_state, geom)
##### a) Colocando bairros em letras maiúsculas dos bairros ----
geometria_bairros = data.frame(lapply(geometria_bairros , function(v) {
if (is.character(v)) return(toupper(v))
else return(v)
}))
##### b) Retirando acentuação dos bairros ----
geometria_bairros = geometria_bairros  %>%
mutate(bairro = stri_trans_general(str = bairro, id = "Latin-ASCII"))
# Bairros
bairros = demanda_local %>%
group_by(bairro) %>%
summarize(QNT = n()) %>%
mutate(PERC = QNT*100/sum(QNT),
PERC = round(PERC,2))
# Estados
estado_nasceu = oferta_local %>%
group_by(ESTADO_ONDE_NASCEU) %>%
summarize(QNT = n()) %>%
mutate(PERC = QNT*100/sum(QNT),
PERC = round(PERC,2))
estado_morou = oferta_local %>%
group_by(ESTADO_ONDE_MOROU) %>%
summarize(QNT = n()) %>%
mutate(PERC = QNT*100/sum(QNT),
PERC = round(PERC,2))
estado_origem = demanda_turista %>%
group_by(ESTADO_ORIGEM) %>%
summarize(QNT = n()) %>%
mutate(PERC = QNT*100/sum(QNT),
PERC = round(PERC,2))
# Bairros
dados_bairros = full_join(bairros, geometria_bairros,
by = c("bairro"))
# Estados
dados_estados_nasceu = full_join(estado_nasceu, geometria_estados,
by = c('ESTADO_ONDE_NASCEU' = 'abbrev_state'))
dados_estados_morou = full_join(estado_morou, geometria_estados,
by = c('ESTADO_ONDE_MOROU' = 'abbrev_state'))
dados_estados_origem = full_join(estado_origem, geometria_estados,
by = c('ESTADO_ORIGEM' = 'abbrev_state'))
# Removendo do ambiente de trabalho bases não utilizadas
rm(demanda_local,
demanda_turista,
oferta_local,
geometria_bairros,
geometria_estados,
bairros,
estado_morou,
estado_nasceu,
estado_origem)
# Personalização do gráfico
no_axis <- theme(axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
tema <- theme(text = element_text(family = 'Avenir')
,panel.grid.major = element_line(color = '#cccccc'
,linetype = 'dashed'
,size = .3
)
,panel.background = element_rect(fill = 'aliceblue')
,plot.title = element_text(size = 20)
,plot.subtitle = element_text(size = 14)
,axis.title = element_blank()
,axis.text = element_text(size = 10)
)
##### a) Mapa dos bairros ----
mapa_bairros_vivem = ggplot() +
geom_sf(data=dados_bairros, aes(geometry = geometry, fill=PERC), color = 'black', size=0.15) +
scale_fill_viridis_c(option = "mako", begin = 0.3, direction = -1) +
labs(fill = "Percentual (%)",
title = "A maioria dos visitantes locais moram na praia",
subtitle = "Os bairros de Cabo Branco e Bancários são os mais citados",
caption = "Fonte: Elaboração própria com dados coletados e do IBGE") +
theme_minimal() +
no_axis +
tema +
theme(legend.position='left',
legend.margin=margin(0, 0, 0, 0)); mapa_bairros_vivem
# Salvando gráfico
ggsave("C:/Users/Macaubas/Desktop/Python/Labimec/Artesanato/Imagens/Mapas/bairro_vivem.jpg",  # jpg, png, eps, tex, etc.
plot = mapa_bairros_vivem, # Usar lastplot() quando não quiser referenciar o objeto ggplot direto
width = 12, height = 8,
units = "in", #  Outras opções c("in", "cm", "mm")
dpi = 300)
##### b) Mapa onde nasceu ----
mapa_estado_nasceu= ggplot() +
geom_sf(data=dados_estados_nasceu, aes(geometry = geom, fill=PERC), color = 'black', size=0.15) +
scale_fill_viridis_c(option = "mako", begin = 0.3, direction = -1) +
labs(fill = "Percentual (%)",
title = "A maioria dos artesãos nasceram na Paraíba",
subtitle = "Há artesões de todas as regiões do estado",
caption = "Fonte: Elaboração própria com dados coletados e do IBGE") +
theme_minimal() +
no_axis +
tema +
theme(legend.position='left',
legend.margin=margin(0, 0, 0, 0)); mapa_estado_nasceu
##### b) Mapa onde nasceu ----
mapa_estado_nasceu= ggplot() +
geom_sf(data=dados_estados_nasceu, aes(geometry = geom, fill=PERC), color = 'black', size=0.15) +
scale_fill_viridis_c(option = "mako", begin = 0.3, direction = -1) +
labs(fill = "Percentual (%)",
title = "A maioria dos artesãos nasceram na Paraíba",
subtitle = "Há artesões de todas as regiões do Brasil",
caption = "Fonte: Elaboração própria com dados coletados e do IBGE") +
theme_minimal() +
no_axis +
tema +
theme(legend.position='left',
legend.margin=margin(0, 0, 0, 0)); mapa_estado_nasceu
# Salvando gráfico
ggsave("C:/Users/Macaubas/Desktop/Python/Labimec/Artesanato/Imagens/Mapas/estados_nasceram.jpg",  # jpg, png, eps, tex, etc.
plot = mapa_estado_nasceu, # Usar lastplot() quando não quiser referenciar o objeto ggplot direto
width = 12, height = 8,
units = "in", #  Outras opções c("in", "cm", "mm")
dpi = 300)
##### c) Mapa onde morou ----
mapa_estado_morou = ggplot() +
geom_sf(data=dados_estados_morou, aes(geometry = geom, fill=PERC), color = 'black', size=0.15) +
scale_fill_viridis_c(option = "rocket", begin = 0.3, direction = -1) +
labs(fill = "Percentual (%)",
title = "A maioria dos artesãos já moraram em municípios da Paraíba",
subtitle = "Uma parcela já morou no Norte do País",
caption = "Fonte: Elaboração própria com dados coletados e do IBGE") +
theme_minimal() +
no_axis +
tema +
theme(legend.position='left',
legend.margin=margin(0, 0, 0, 0)); mapa_estado_morou
# Salvando gráfico
ggsave("C:/Users/Macaubas/Desktop/Python/Labimec/Artesanato/Imagens/Mapas/estados_morou.jpg",  # jpg, png, eps, tex, etc.
plot = mapa_estado_morou, # Usar lastplot() quando não quiser referenciar o objeto ggplot direto
width = 12, height = 8,
units = "in", #  Outras opções c("in", "cm", "mm")
dpi = 300)
##### d) Mapa estado origem ----
mapa_estado_origem = ggplot() +
geom_sf(data=dados_estados_origem, aes(geometry = geom, fill=PERC), color = 'black', size=0.15) +
scale_fill_viridis_c(option = "rocket", begin = 0.3, direction = -1) +
labs(fill = "Percentual (%)",
title = "A maioria dos turistas entrevistado são da Paraíba, Bahia e São Paulo",
subtitle = "Há turistas de todas as regiões do Brasil",
caption = "Fonte: Elaboração própria com dados coletados e do IBGE") +
theme_minimal() +
no_axis +
tema +
theme(legend.position='left',
legend.margin=margin(0, 0, 0, 0)); mapa_estado_origem
# Salvando gráfico
ggsave("C:/Users/Macaubas/Desktop/Python/Labimec/Artesanato/Imagens/Mapas/estados_origem.jpg",  # jpg, png, eps, tex, etc.
plot = mapa_estado_origem, # Usar lastplot() quando não quiser referenciar o objeto ggplot direto
width = 12, height = 8,
units = "in", #  Outras opções c("in", "cm", "mm")
dpi = 300)
